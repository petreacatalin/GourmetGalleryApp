name: Build and Deploy .NET App to Azure

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch: # Manual trigger

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up .NET SDK
      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.0' # Adjust this to match your .NET version

      # Restore dependencies for the .NET project
      - name: Restore .NET dependencies
        run: dotnet restore ./GourmeyGalleryApp.csproj

      # Build the .NET project
      - name: Build .NET project
        run: dotnet build ./GourmeyGalleryApp.csproj --configuration Release

      # Publish the .NET project
      - name: Publish .NET project
        run: dotnet publish ./GourmeyGalleryApp.csproj --configuration Release --output ./publish

      # Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Build the Docker image for .NET app
      - name: Build Docker image for .NET app
        run: |
          docker build -t gourmetgallery.azurecr.io/gourmet-gallery-be:latest -f ./Dockerfile .

      # Log in to Azure using the Service Principal
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}

      # Push Docker image to Azure Container Registry
      - name: Push Docker image to Azure Container Registry
        run: |
          docker push gourmetgallery.azurecr.io/gourmet-gallery-be:latest
